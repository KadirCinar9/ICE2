#
# 1. docker-compose -p microservice-comp3095-ecommerce -f docker-compose.yml up -d
#  - This command will start the containers in detached mode without rebuilding the images ( if they exist )
#
# 2. docker-compose -p microservice-comp3095-ecommerce -f docker-compose.yml up -d --build
#  - This command forces the rebuild of images, even if they already exist, before starting the containers
#-----------------------------------------------------------------------------------------------------------------------
version: '3.9'

services:
  product-service:
    image: product-service
    ports:
      - "8084:8084"
    build:
      context: ./product-service  # This is correct; points to the product-service folder
      dockerfile: Dockerfile      # Use Dockerfile directly since it's in the build context
    container_name: product-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongodb
    networks:
      - spring

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo-db:/data/db
      - ./init/mongo/docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    networks:
      - spring

  mongo-express:
    image: mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb
    container_name: mongo-express-ps
    depends_on:
      - mongodb
    networks:
      - spring

volumes:
  mongo-db:
    driver: local

networks:
  spring:
    driver: bridge
